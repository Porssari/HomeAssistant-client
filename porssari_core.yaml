##################################
# Pörssäri Home Assistant client #
##################################

# This file includes core functionalities. Do not edit this file.
# Sensors based on Pörssari json data are included in porssari_sensors.yaml

# JSON-request from server
rest:
  - resource_template: >
      {% set MAC = states('input_text.porssari_mac') if states('input_text.porssari_mac') | length > 10 else "HA_undefined" %} 
      {% if state_attr("sensor.porssari_json_data", "Metadata") %}
        {% set timestamp = state_attr("sensor.porssari_json_data", "Metadata")['Timestamp'] %}
        {% set fetch_url = state_attr("sensor.porssari_json_data", "Metadata")['Fetch_url'] %}
      {% else %}
        {% set timestamp = 0 %}
        {% set fetch_url = "https://api.porssari.fi/getcontrols.php" %}
      {% endif %}  
      {{ fetch_url }}?device_mac={{ MAC }}&last_request={{ timestamp }}&client=Homeassistant_1.0-beta3&prices=true
    scan_interval: 604800
    sensor:
      - name: "porssari_json"
        value_template: "{{ value_json.Metadata.Timestamp if value_json else 0 }}"
        json_attributes:
          - Metadata
          - Prices
          - Channel1
          - Channel2
          - Channel3
          - Channel4
          - Channel5
          - Channel6
          - Channel7
          - Channel8

# Is updated -state request from server
#command_line:
#  - sensor:
#      name: "porssari_request"
#      command: >-
#        curl -o /dev/null -qsI -w "%{http_code}\n" "
#        {%- set MAC = states('input_text.porssari_mac') if states('input_text.porssari_mac') | length > 5 else "HA_undefined" -%}
#        {%- if state_attr("sensor.porssari_json_data", "Metadata") -%}
#          {%- set timestamp = state_attr("sensor.porssari_json_data", "Metadata")['Timestamp'] -%}
#          {%- set fetch_url = state_attr("sensor.porssari_json_data", "Metadata")['Fetch_url'] -%}
#        {%- else -%}
#          {%- set timestamp = 0 -%}
#          {%- set fetch_url = "https://api.porssari.fi/getcontrols.php" -%}
#        {%- endif -%}
#        {{ fetch_url }}?device_mac={{ MAC }}&last_request={{ timestamp }}&client=Homeassistant_1.0-beta3"
#      scan_interval: 604800
#      value_template: "{{ value }}"

template:
  # Sensors for Channel states.
  - sensor:
      - name: "Pörssäri Channel 1 State"
        unique_id: porssari_ch1_state
        state: >
          {% if is_state('binary_sensor.porssari_json_controls', 'on') %}
            {% set curHour = now().hour | string %}
            {{ state_attr("sensor.porssari_json_data", "Channel1")[curHour] }}
          {% else %}
            {{ -1 }}
          {% endif %}
      - name: "Pörssäri Channel 2 State"
        unique_id: porssari_ch2_state
        state: >
          {% if is_state('binary_sensor.porssari_json_controls', 'on') %}
            {% set curHour = now().hour | string %}
            {{ state_attr("sensor.porssari_json_data", "Channel2")[curHour] }}
          {% else %}
            {{ -1 }}
          {% endif %}
      - name: "Pörssäri Channel 3 State"
        unique_id: porssari_ch3_state
        state: >
          {% if is_state('binary_sensor.porssari_json_controls', 'on') %}
            {% set curHour = now().hour | string %}
            {{ state_attr("sensor.porssari_json_data", "Channel3")[curHour] }}
          {% else %}
            {{ -1 }}
          {% endif %}
      - name: "Pörssäri Channel 4 State"
        unique_id: porssari_ch4_state
        state: >
          {% if is_state('binary_sensor.porssari_json_controls', 'on') %}
            {% set curHour = now().hour | string %}
            {{ state_attr("sensor.porssari_json_data", "Channel4")[curHour] }}
          {% else %}
            {{ -1 }}
          {% endif %}
      - name: "Pörssäri Channel 5 State"
        unique_id: porssari_ch5_state
        state: >
          {% if is_state('binary_sensor.porssari_json_controls', 'on') %}
            {% set curHour = now().hour | string %}
            {{ state_attr("sensor.porssari_json_data", "Channel5")[curHour] }}
          {% else %}
            {{ -1 }}
          {% endif %}
      - name: "Pörssäri Channel 6 State"
        unique_id: porssari_ch6_state
        state: >
          {% if is_state('binary_sensor.porssari_json_controls', 'on') %}
            {% set curHour = now().hour | string %}
            {{ state_attr("sensor.porssari_json_data", "Channel6")[curHour] }}
          {% else %}
            {{ -1 }}
          {% endif %}
      - name: "Pörssäri Channel 7 State"
        unique_id: porssari_ch7_state
        state: >
          {% if is_state('binary_sensor.porssari_json_controls', 'on') %}
            {% set curHour = now().hour | string %}
            {{ state_attr("sensor.porssari_json_data", "Channel7")[curHour] }}
          {% else %}
            {{ -1 }}
          {% endif %}
      - name: "Pörssäri Channel 8 State"
        unique_id: porssari_ch8_state
        state: >
          {% if is_state('binary_sensor.porssari_json_controls', 'on') %}
            {% set curHour = now().hour | string %}
            {{ state_attr("sensor.porssari_json_data", "Channel8")[curHour] }}
          {% else %}
            {{ -1 }}
          {% endif %}

  # Sensor to save request json data.
  - sensor:
      - name: porssari_json_data
        state: >
          {% if state_attr("sensor.porssari_json_data", "Metadata") %}
            {{ state_attr("sensor.porssari_json_data", "Metadata")['Timestamp'] }}
          {% else %}
            {{ 0 }}
          {% endif %}
        attributes:
          Metadata: >
            {{ state_attr("sensor.porssari_json", "Metadata") if state_attr("sensor.porssari_json", "Metadata") else state_attr("sensor.porssari_json_data", "Metadata") }}
          Prices: >
            {{ state_attr("sensor.porssari_json", "Prices") if state_attr("sensor.porssari_json", "Prices") else state_attr("sensor.porssari_json_data", "Prices") }}
          Channel1: >
            {{ state_attr("sensor.porssari_json", "Channel1") if state_attr("sensor.porssari_json", "Channel1") else state_attr("sensor.porssari_json_data", "Channel1") }}
          Channel2: >
            {{ state_attr("sensor.porssari_json", "Channel2") if state_attr("sensor.porssari_json", "Channel2") else state_attr("sensor.porssari_json_data", "Channel2") }}
          Channel3: >
            {{ state_attr("sensor.porssari_json", "Channel3") if state_attr("sensor.porssari_json", "Channel3") else state_attr("sensor.porssari_json_data", "Channel3") }}
          Channel4: >
            {{ state_attr("sensor.porssari_json", "Channel4") if state_attr("sensor.porssari_json", "Channel4") else state_attr("sensor.porssari_json_data", "Channel4") }}
          Channel5: >
            {{ state_attr("sensor.porssari_json", "Channel5") if state_attr("sensor.porssari_json", "Channel5") else state_attr("sensor.porssari_json_data", "Channel5") }}
          Channel6: >
            {{ state_attr("sensor.porssari_json", "Channel6") if state_attr("sensor.porssari_json", "Channel6") else state_attr("sensor.porssari_json_data", "Channel6") }}
          Channel7: >
            {{ state_attr("sensor.porssari_json", "Channel7") if state_attr("sensor.porssari_json", "Channel7") else state_attr("sensor.porssari_json_data", "Channel7") }}
          Channel8: >
            {{ state_attr("sensor.porssari_json", "Channel8") if state_attr("sensor.porssari_json", "Channel8") else state_attr("sensor.porssari_json_data", "Channel8") }}

  # Sensor to determine if json is valid for controls and contains price data
  - binary_sensor:
      - name: porssari_json_controls
        state: >
          {% if state_attr("sensor.porssari_json_data", "Metadata") %}
            {% set timestamp = as_datetime(state_attr("sensor.porssari_json_data", "Metadata")['Timestamp'] | int).strftime('%Y-%m-%dT%H:00:00%z') %}
            {% set fromJson = utcnow().timestamp() - as_datetime(timestamp).timestamp() %}
            {% set hoursCount = state_attr("sensor.porssari_json_data", "Metadata")['Hours_count'] %}
            {% set maxDiff = hoursCount * 3600 %}
            {{ maxDiff - fromJson > 0 }}
          {% else %}
            {{ false }}
          {% endif %}
      - name: porssari_json_prices
        state: >
          {% set ns = namespace(pricesToday=[]) %}
          {% if state_attr("sensor.porssari_json_data", "Prices") %}
            {% set timeStampList = state_attr("sensor.porssari_json_data", "Prices") | list %}
            {% for item in timeStampList %}
              {% if now().day == as_datetime(item).day %}
                {% set ns.pricesToday = ns.pricesToday + [state_attr("sensor.porssari_json_data", "Prices")[item]['Price'] | float] %}
              {% endif %}            
            {% endfor %}
          {% endif %}
          {{ ns.pricesToday | length >= 23 }}

# Update logic for json-sensor and request-sensor.
automation:
  - id: "porssari_update_automation"
    alias: Pörssäri-ohjaustiedon päivitys
    description: "Uusi ohjaustieto haetaan kun asetuksia on päivitetty tai tunnin välein"
    trigger:
      - platform: time_pattern
        hours: /2
    #condition:
    #  - condition: template
    #    value_template: '{{ is_state("sensor.porssari_request", "200") }}'
    #    alias: Päivitä vain kun serveri tarjoaa uutta jsonia
    action:
      - delay: "{{ range(10, 30)|random }}"
      - service: homeassistant.update_entity
        alias: Päivitä porssari_json
        target:
          entity_id: sensor.porssari_json
  #- id: "porssari_request_automation"
  #  alias: Pörssäri-request -sensorin päivitysautomaatio
  #  description: "Päivitetään request-sensori 1,5-2,5min välein."
  #  trigger:
  #    - platform: time_pattern
  #      minutes: /2
  #  action:
  #    - delay: "{{ range(10, 30)|random }}"
  #    - service: homeassistant.update_entity
  #      alias: Päivitä porssari_request
  #      target:
  #        entity_id: sensor.porssari_request

# Settings parameters
input_text:
  porssari_mac:
    name: Pörssäri laitetunnus